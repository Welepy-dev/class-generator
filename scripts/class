#!/bin/bash

USE_FOLDER=false
VERBOSE=false

createHeader()
{
    CLASSNAME=$1
    DIR=${2:-""}

    cat <<EOF > "${DIR}${CLASSNAME}.hpp"
#ifndef ${CLASSNAME^^}_HPP
#define ${CLASSNAME^^}_HPP

class $CLASSNAME
{
    public:
        $CLASSNAME();
        $CLASSNAME(const $CLASSNAME &other);
        $CLASSNAME &operator=(const $CLASSNAME &other);
        ~$CLASSNAME();

    private:

};

#endif
EOF
}

createCpp()
{
CLASSNAME=$1
DIR=${2:-""} 

cat <<EOF > "${DIR}${CLASSNAME}.cpp"
#include "${DIR}${CLASSNAME}.hpp"
#include <iostream>

$CLASSNAME::$CLASSNAME()
{
	std::cout << "$CLASSNAME's default constructor called" << std::endl;
} 
 
$CLASSNAME &$CLASSNAME::operator=(const $CLASSNAME &other)
{ 
	std::cout << "$CLASSNAME's Copy assignment operator called" << std::endl;

	//here you copy your class atribuites...

	return (*this);
} 
 
$CLASSNAME::$CLASSNAME(const $CLASSNAME &other)
{ 
	std::cout << "$CLASSNAME's copy constructor operator called" << std::endl;
 
	*this = other;
}

$CLASSNAME::~$CLASSNAME()
{ 
	std::cout << "$CLASSNAME's default destructor called" << std::endl;
}
EOF
}

while getopts "f" opt; do
	case $opt in
		f)
			USE_FOLDER=true
			;;
		v)	#will finish this later
			VERBOSE=true
			;;
		*)
			echo "Usage: $0 [-f] ClassName"
			exit 1
			;;
	esac
done

shift $((OPTIND - 1))

if [[ -z $1 ]]; then
    echo "I need at least the class name to work."
	exit 1
fi

CLASSNAME=$1

if $USE_FOLDER; then
	mkdir -p src inc
	createCpp "$CLASSNAME" "src/"
	createHeader "$CLASSNAME" "inc/"
else
	createCpp "$CLASSNAME"
	createHeader "$CLASSNAME"
fi

